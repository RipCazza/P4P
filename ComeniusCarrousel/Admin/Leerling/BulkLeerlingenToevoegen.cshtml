@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Leerlingen toevoegen";

    if (!User.IsInRole("Admin"))
    {
        Response.Redirect("~/");
    }

    var leerlingenInvoer = "";
        /*var userName = "";
        var password = "";

        Validation.RequireField("userName", "U moet een gebruikersnaam invullen.");
        Validation.RequireField("password", "Er moet een wachtwoord ingevuld worden.");
        Validation.RequireField("confirmPassword", "Bevestegings wachtwoord mag niet leeg zijn.");
        Validation.Add("confirmPassword",
            Validator.EqualsTo("password", "Bevestegings wachtwoord komt niet overeen met het wachtwoord."));
        Validation.Add("password",
            Validator.StringLength(
                maxLength: Int32.MaxValue,
                minLength: 6,
                errorMessage: "Wachtwoord moet minstens 6 tekens bevatten"));
        Validation.Add("userName",
            Validator.StringLength(
                maxLength: 400,
                errorMessage: "Uw e mail kan niet meer dan 400 tekens bevatten"));*/

    if(IsPost)
    {
        leerlingenInvoer = Request.Form["leerlingInvoer"];
        string[] leerlingen = Repository.SplitLeerlingen(leerlingenInvoer);
        for(int i = 0; i < leerlingen.Length; i++)
        {
            string[] leerling = Repository.SplitLeerling(leerlingen[i]);
            if (!leerling.Length = 9) //Voornaam|Achternaam|Leerlingnummer|Mail|Wachtwoord|Klas|Niveau|Talentstroom vak|Instroomleerling(True/False)
            {
                Validation.AddFormError("Het aantal waardes bij leerling " + i + " is onjuist");
            }
            else
            {
                string voornaam = leerling[0];
                string achternaam = leerling[1];
                bool result = Int32.TryParse(leerling[2], out leerlingnummer);
                if (!result)
                {
                    Validation.AddFormError("het leerlingnummer van leerling " + i + " bevat niet alleen nummers");
                }
                string mail = leerling[3];
                string wachtwoord = leerling[4];
                string klas = leerling[5];
                string niveau = leerling[6];
                string vak = leerling[7];
                string instroomleerling = leerling[8];

                //WIP
            }
        }
        /*foreach(string leerling in leerlingen)
        {
            AntiForgery.Validate();
            userName = Request.Form["userName"];
            password = Request.Form["password"];
            confirmPassword = Request.Form["confirmPassword"];

            if(Validation.IsValid())
            {
                var db = Database.Open(App.AuthDataBase);

                var user = db.QuerySingle("SELECT UserName FROM UserProfile WHERE LOWER(UserName) = LOWER(@0)", userName);
                if(user == null)
                {
                    db.Execute("INSERT INTO UserProfile (UserName) VALUES (LOWER(@0))", userName);

                    try
                    {
                        var token = WebSecurity.CreateAccount(userName, password, false);
                        Roles.AddUserToRole(userName, "Leerling");
                        db.Close();
                        Response.Redirect("~/Admin/Leerling/LeerlingOverzicht");
                    }
                    catch(System.Web.Security.MembershipCreateUserException e)
                    {
                        db.Close();
                        ModelState.AddFormError(e.Message);
                    }
                }
                else
                {
                    ModelState.AddFormError("Gebruikersnaam bestaat al");
                }
                db.Close();
            }
        }*/
    }
}

<div class="col-md-12">
    <form method="post">
        @AntiForgery.GetHtml()
        @Html.ValidationSummary("Account creatie is mislukt, verhelp de fouten en probeer het opnieuw.", excludeFieldErrors: true, htmlAttributes: null)
        <textarea style="width: 100%; resize: none; margin: 0 5px; padding: 0px" name="leerlingenInvoer" class="form-control col-md-12" rows="20"
                  placeholder="Voornaam|Achternaam|Leerlingnummer|Mail|Wachtwoord|Klas|Niveau|Talentstroom vak|Instroomleerling(True/False)"
                  maxlength="4000"></textarea>

    </form>
</div>

