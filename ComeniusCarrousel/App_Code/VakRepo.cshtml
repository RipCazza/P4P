@functions{
    public class Vak
    {
        private const string table = "Vak";
        private const string idName = "VakId";

        private int vakId;
        private string vakNaam;
        private string niveau;

        public Vak(int vakId, string vakNaam, string niveau)
        {
            this.vakId = vakId;
            this.vakNaam = vakNaam;
            this.niveau = niveau;
        }

        public int VakId
        {
            get{return vakId;}
        }
        public string VakNaam
        {
            get{return vakNaam;}
            set{
                Repository.CRUD.doSimpleIdUpdate(table, "VakNaam", value, idName, vakId);
            }
        }
        public string Niveau
        {
            get{return niveau;}
            set{
                Repository.CRUD.doSimpleIdUpdate(table, "Niveau", value, idName, vakId);
            }
        }
    }

    public static List<Vak> GetVakken(string niveau = "Default", string talentstroomVak = "")
    {
        List<Vak> vakken = new List<Vak>();
        var db = Database.Open(App.DataBase);
        var data = db.Query((niveau == "Default" ? "SELECT * FROM Vak" : "SELECT * FROM Vak WHERE LOWER(Niveau) = LOWER(@0)"), niveau);
        foreach(var row in data)
        {
            if (row.VakNaam == talentstroomVak)
            {}
            else
            {
                vakken.Add(new Vak(row.VakId, row.VakNaam, row.Niveau));
            }
        }
        db.Close();
        return vakken;
    }

    public static Vak GetVak(int id)
    {
        var db = Database.Open(App.DataBase);
        var data = db.QuerySingle("SELECT * FROM Vak WHERE VakId = @0", id);
        if(data != null)
        {
            Vak vak = new Vak(id, data.VakNaam, data.Niveau);
            db.Close();
            return vak;
        }
        db.Close();
        return null;
    }

    public static void MakeVak(string vakNaam, string niveau)
    {
        var db = Database.Open(App.DataBase);
        var insertCommand = "INSERT INTO Vak (VakNaam, Niveau) VALUES(@0,@1)";
        db.Execute(insertCommand, vakNaam, niveau);
        db.Close();
    }

    public static void DeleteVak(int id)
    {
        var db = Database.Open(App.DataBase);
        var deleteCommand = "DELETE FROM Vak WHERE VakId = @0";
        var deleteKeuzeCommand = "DELETE FROM Keuze WHERE VakId = @0";
        var voorlichtingData = db.Query("SELECT VoorlichtingId FROM Voorlichting Where VakId = @0", id);
        db.Execute(deleteCommand, id);
        db.Execute(deleteKeuzeCommand, id);
        foreach (var row in voorlichtingData)
        {
            VoorlichtingRepo.DeleteVoorlichting(row.VoorlichtingId);
        }
        db.Close();
    }

    public static bool ValidateVak(string vakNaam, string niveau)
    {
        var db = Database.Open(App.DataBase);
        var vakCheck = db.QuerySingle("SELECT VakNaam FROM Vak WHERE LOWER(VakNaam) = LOWER(@0) AND LOWER(Niveau) = LOWER(@1)", vakNaam, niveau);
        db.Close();
        if (vakCheck == null){return false;}
        else{return true;}
    }
}
