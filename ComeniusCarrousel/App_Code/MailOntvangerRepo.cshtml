@functions{
    // voegt een mailOntvanger toe aan de database met optionele argumenten waarop users geselecteerd kunnen worden
    public static void InsertMailOntvanger (int mailId, string aangemeld = "", string niveau = "", string klasId = "", string roleId= "", string userId = "")
    {
        var db = Database.Open(App.DataBase);
        var insertCommand = "INSERT INTO MailOntvanger (MailId, Aangemeld, Niveau, KlasId, RoleId, UserId) VALUES(@0,@1,@2,@3,@4,@5)";
        db.Execute(insertCommand, mailId, aangemeld != "" ? aangemeld : null, niveau != "" ? niveau : null, 
                   klasId != "" ? klasId : null, roleId != "" ? roleId : null, userId != "" ? userId : null);
        db.Close();
    }

    // Geeft een lijst terug met alle userIds die een connectie hebben met de rows in MailOntvanger
    public static List<int> GetMailOntvangerIds (int mailId)
    {
        List<int> userIds = new List<int>();
        var db = Database.Open(App.DataBase);
        var gebruikerData = db.Query("SELECT Gebruiker.UserId FROM Gebruiker INNER JOIN MailOntvanger ON Gebruiker.UserId = MailOntvanger.UserId WHERE MailId = @0", mailId);
        var leerlingData = db.Query("SELECT Leerling.UserId FROM Leerling INNER JOIN MailOntvanger ON Leerling.Niveau = MailOntvanger.Niveau WHERE MailId = @0 UNION SELECT Leerling.UserId FROM Leerling INNER JOIN MailOntvanger ON Leerling.Aangemeld = MailOntvanger.Aangemeld WHERE MailId = @0 UNION SELECT Leerling.UserId FROM Leerling INNER JOIN MailOntvanger ON Leerling.KlasId = MailOntvanger.KlasId WHERE MailId = @0", mailId);
        var roleData = db.Query("SELECT RoleId FROM MailOntvanger WHERE MailId = @0", mailId);

        foreach (var row in leerlingData)
        {
            userIds.Add(row.UserId);
        }
        foreach (var row in gebruikerData)
        {
            if (!userIds.Contains(row.UserId))
            {
                userIds.Add(row.UserId);
            }
        }

        if (roleData != null)
        {
            var authDb = Database.Open(App.AuthDataBase);
            foreach (var row in roleData)
            {
                if (row.RoleId != null)
                {
                    var moreRoleData = authDb.Query("SELECT UserId FROM webpages_UsersInRoles INNER JOIN webpages_Roles ON webpages_UsersInRoles.RoleId = webpages_Roles.RoleId WHERE webpages_UsersInRoles.RoleId = @0", row.RoleId);
                    foreach (var r in moreRoleData)
                    {
                        if (!userIds.Contains(r.UserId))
                        {
                            userIds.Add(r.UserId);
                        }
                    }
                }
            }
            authDb.Close();
        }
        db.Close();
        return userIds;
    }

    // geeft een lijst van userNames(mail addressen) terug van de gegeven users
    public static List<Tuple<int, string>> GetMailUsers (List<int> userIds)
    {
        List<Tuple<int, string>> mailUsers = new List<Tuple<int, string>>{};
        var db = Database.Open(App.DataBase);
        var authDb = Database.Open(App.AuthDataBase);
        foreach (int userId in userIds)
        {
            var data = authDb.QuerySingle("SELECT UserName FROM UserProfile WHERE UserId = @0", userId);
            if (data != null)
            {
                mailUsers.Add(new Tuple<int, string> (userId, data.UserName));
            }
        }
        db.Close();
        authDb.Close();
        return mailUsers;
    }

    public static List<string> GetMailOntvangerStrings (int mailId)
    {
        List<string> ontvangers = new List<string>{};
        var db = Database.Open(App.DataBase);
        var data = db.Query("SELECT * FROM MailOntvanger WHERE MailId = @0", mailId);
        foreach (var row in data)
        {
            string ontvanger = "";
            if (row.UserId != null)
            {
                var userData = db.QuerySingle("SELECT Voornaam, Achternaam FROM Gebruiker WHERE UserId = @0", row.UserId);
                if (userData != null)
                {
                    ontvanger += userData.Voornaam + " " + userData.Achternaam;
                }
            }
            if (row.KlasId != null)
            {
                var klasData = db.QuerySingle("SELECT KlasNaam FROM Klas WHERE KlasId = @0", row.KlasId);
                if (klasData != null)
                {
                    if (ontvanger != "")
                    {
                        ontvanger += " & ";
                    }

                    ontvanger += klasData.KlasNaam;
                }
            }
            if (row.Niveau != null)
            {
                if (ontvanger != "")
                {
                    ontvanger += " & ";
                }

                ontvanger += row.Niveau;
            }
            if (row.Aangemeld != null)
            {
                if (ontvanger != "")
                {
                    ontvanger += " & ";
                }

                if (row.Aangemeld == true)
                {
                    ontvanger += "aangemelde leerlingen";
                }
                else
                {
                    ontvanger += "onaangemelde leerlingen";
                }
            }
            if (row.RoleId != null)
            {
                var authDb = Database.Open(App.AuthDataBase);
                var roleData = authDb.QuerySingle("SELECT RoleName FROM webpages_Roles WHERE RoleId = @0", row.RoleId);
                if (roleData != null)
                {
                    if (ontvanger != "")
                    {
                        ontvanger += " & ";
                    }

                    ontvanger += roleData.RoleName;
                }
                authDb.Close();
            }

            ontvangers.Add(ontvanger);
        }
        db.Close();
        return ontvangers;
    }
}