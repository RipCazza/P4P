@*
    Permissies: Admin, Decaan
    Te bereiken van: Decaan/Leraar/LeraarOverzicht
    Linkt door naar: Decaan/Leraar/LeraarOverzicht
    Beschrijving: Vraagt om een mail, voornaam, achternaam en wachtwoord en voegt hiermee een gebruiker toe aan de database met leraar permissies
*@
@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Leraar toevoegen";

    if (!User.IsInRole("Admin") && !User.IsInRole("Decaan"))
    {
        Response.Redirect("~/");
    }

    var userName = "";
    var voornaam = "";
    var achternaam= "";
    var password = "";
    var vak = "";
    List<string> vakken = VakRepo.GetDistinctVakken();

    Validation.RequireField("userName", "U moet een gebruiker invullen.");
    Validation.RequireField("voornaam", "U moet een voornaam invullen.");
    Validation.RequireField("achternaam", "U moet een achternaam invullen.");

    Validation.Add("userName",
        Validator.StringLength(
            maxLength: 400,
            errorMessage: "gebruiker kan niet meer dan 400 tekens bevatten"));

    if(IsPost)
    {
        AntiForgery.Validate();
        userName = Request.Form["userName"];
        password = System.Web.Security.Membership.GeneratePassword(15, 1);

        voornaam = Request.Form["voornaam"];
        achternaam = Request.Form["achternaam"];
        if (Request.Form["vak"] != "-")
        {
            vak = Request.Form["vak"];
        }
        
        if (!(userName.Contains("@") && userName.Substring(userName.IndexOf("@") + 2).Contains(".")))
        {
            Validation.AddFormError("De mail kan niet juist zijn.");
        }

        if(Validation.IsValid())
        {
            Repository.AccountMail(userName, password);

            LeraarRepo.MakeLeraar(userName, password, voornaam, achternaam, vak);
            Response.Redirect("~/Decaan/Leraar/LeraarOverzicht");
        }
    }
}

<h2>Nieuwe leraar aanmaken</h2>

<div class="col-md-12">
    <form method="post">
        @AntiForgery.GetHtml()
        @Html.ValidationSummary("Account creatie is mislukt, verhelp de fouten en probeer het opnieuw.", excludeFieldErrors: true, htmlAttributes: null)
        <div class="form-group">
            <label for="userName">Email adres</label>
            <input type="text" id="userName" name="userName" value="@userName" class="form-control">
            @Html.ValidationMessage("userName")
        </div>
        <div class="form-group">
            <label for="userName">Voornaam</label>
            <input type="text" id="voornaam" name="voornaam" value="@voornaam" class="form-control">
            @Html.ValidationMessage("voornaam")
        </div>
        <div class="form-group">
            <label for="userName">Achternaam</label>
            <input type="text" id="achternaam" name="achternaam" value="@achternaam" class="form-control">
            @Html.ValidationMessage("achternaam")
        </div>
        <div class="form-group">
        <label>Selecteer te geven vak</label>
        <select name="vak" class="form-control">
            <option value="-"></option>
            @foreach(string v in vakken) // maakt een keuzemenu met alle mogelijke vakken
            {
                <option value="@v">@v</option>
            }
        </select>
        </div>
            
        <div class="from-group" id="floatRight">
            <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span>&nbsp; Toevoegen</button>
        </div>
    </form>
</div>